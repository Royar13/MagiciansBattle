{"version":3,"sources":["app.js","services/user.js","controllers/home/home.js","controllers/lobby/lobby.js","controllers/login/login.js","controllers/main/main.js","controllers/register/register.js","directives/field/errors.js","directives/field/generalErrors.js","directives/field/selectField.js","directives/field/textField.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjfile":"script.js","sourcesContent":["$(document).ready(function () {\r\n    $(document).foundation();\r\n});\r\n\r\nï»¿var app = angular.module(\"magiciansBattle\", [\"ngRoute\", \"angularCSS\"]);\r\n\r\napp.run(function ($rootScope) {\r\n    $rootScope.templateUrl = templateUrl;\r\n\r\n    //$rootScope.$on(\"$routeChangeSuccess\", function (ev, data) {\r\n    //    if (data.$route && data.$route.controller)\r\n    //        $rootScope.controller = data.$route.controller;\r\n    //});\r\n});\r\n\r\napp.config(function ($routeProvider) {\r\n    $routeProvider\r\n            .when(\"/\", {\r\n                templateUrl: templateUrl(\"home/home.html\"),\r\n                controller: \"homeCtrl\",\r\n                css: styleUrl(\"home.css\")\r\n            })\r\n            .when(\"/lobby\", {\r\n                templateUrl: templateUrl(\"lobby/lobby.html\"),\r\n                controller: \"lobbyCtrl\"\r\n            });\r\n});\r\n\r\nfunction templateUrl(relativeUrl) {\r\n    return \"/MagiciansBattle/web/site/app/controllers/\" + relativeUrl;\r\n}\r\nfunction styleUrl(relativeUrl) {\r\n    return \"/MagiciansBattle/web/dist/site/styles/\" + relativeUrl;\r\n}","angular.module(\"magiciansBattle\").service(\"userService\", function ($http, $location, $q) {\r\n    this.user = null;\r\n    this.userRequest = null;\r\n    this.updateUser = function (user) {\r\n        this.user = user;\r\n    };\r\n\r\n    this.login = function (fields) {\r\n        var deferred = $q.defer();\r\n        $http({\r\n            method: \"post\",\r\n            url: \"/api/Account/Login\",\r\n            data: fields\r\n        }).then(function (response) {\r\n            if (response.data.success) {\r\n                this.updateUser(response.data.user);\r\n\r\n                deferred.resolve(this.user);\r\n            }\r\n            else {\r\n                deferred.reject(response.data.errors);\r\n            }\r\n        }.bind(this), function () {\r\n            deferred.reject();\r\n        });\r\n\r\n        return deferred.promise;\r\n    };\r\n\r\n    this.logOff = function () {\r\n        $http({\r\n            method: \"post\",\r\n            url: \"/api/account/LogOff\"\r\n        }).then(function () {\r\n            this.updateUser(null);\r\n            this.userRequest = null;\r\n            $location.path(\"/\");\r\n        }.bind(this));\r\n    };\r\n\r\n    this.getUser = function () {\r\n        var deferred = $q.defer();\r\n\r\n        if (this.user != null) {\r\n            deferred.resolve(this.user);\r\n        }\r\n        else {\r\n            if (this.userRequest == null) {\r\n                this.userRequest = $http({\r\n                    method: \"post\",\r\n                    url: \"/api/account/FetchUser\"\r\n                });\r\n            }\r\n            this.userRequest.then(function (response) {\r\n                if (response.data.success) {\r\n                    this.updateUser(response.data.user);\r\n                    deferred.resolve(this.user);\r\n                }\r\n                else {\r\n                    deferred.reject();\r\n                }\r\n            }.bind(this), function () {\r\n                deferred.reject();\r\n            });\r\n        }\r\n        return deferred.promise;\r\n    };\r\n\r\n    this.hasPermission = function (id) {\r\n        if (this.user == null)\r\n            return false;\r\n        var permissions = this.user.permissionsArr;\r\n        for (var i in permissions) {\r\n            if (permissions[i] == id)\r\n                return true;\r\n        }\r\n        return false;\r\n    };\r\n});","angular.module(\"magiciansBattle\").controller(\"homeCtrl\", function ($scope) {\r\n\r\n});","angular.module(\"magiciansBattle\").controller(\"lobbyCtrl\", function ($scope) {\r\n\r\n});","angular.module(\"magiciansBattle\").controller(\"loginCtrl\", function ($scope, $rootScope, $http, $location, $timeout, userService) {\r\n    $scope.user = null;\r\n    userService.getUser().then(function (user) {\r\n        $scope.user = user;\r\n    });\r\n\r\n    $scope.loading = false;\r\n\r\n    $scope.showRegisterDialog = function () {\r\n\r\n    };\r\n\r\n});","angular.module(\"magiciansBattle\").controller(\"mainCtrl\", function ($scope) {\r\n\r\n});","angular.module(\"magiciansBattle\").controller(\"registerCtrl\", function ($scope) {\r\n    $scope.serverErrors = { a: \"A\" };\r\n});","angular.module(\"magiciansBattle\").directive(\"errors\", function () {\n    return {\n        restrict: \"A\",\n        scope: true,\n        templateUrl: \"app/directives/field/errors.html\"\n    };\n});","angular.module(\"magiciansBattle\").directive(\"generalErrors\", function () {\n    return {\n        restrict: \"A\",\n        scope: true,\n        templateUrl: \"app/directives/field/generalErrors.html\"\n    };\n});","angular.module(\"magiciansBattle\").directive(\"selectField\", function () {\n    return {\n        restrict: \"A\",\n        scope: true,\n        require: \"field\",\n        templateUrl: \"app/directives/field/selectField.html\",\n        replace: false,\n        controller: function ($scope, $element) {\n            $scope.field = $element.attr(\"field-name\");\n\n            $scope.class = \"\";\n            if ($element[0].hasAttribute(\"add-class\")) {\n                $scope.class = $element.attr(\"add-class\");\n            }\n            $scope.description = \"\";\n            if ($element[0].hasAttribute(\"description\")) {\n                $scope.description = $element.attr(\"description\");\n            }\n            $scope.selectName = $element.attr(\"options\");\n            var valueName = null;\n            if ($element[0].hasAttribute(\"options-value\")) {\n                valueName = $element.attr(\"options-value\");\n            }\n            var textName = null;\n            if ($element[0].hasAttribute(\"options-text\")) {\n                textName = $element.attr(\"options-text\");\n            }\n\n            $scope.getOptionValue = function (option) {\n                if (valueName == null)\n                    return option;\n                else\n                    return option[valueName];\n            };\n            $scope.getOptionText = function (option) {\n                if (textName == null)\n                    return option;\n                else\n                    return option[textName];\n            };\n        }\n    };\n});","angular.module(\"magiciansBattle\").directive(\"textField\", function () {\n    return {\n        restrict: \"A\",\n        scope: true,\n        templateUrl: \"app/directives/field/textField.html\",\n        replace: false,\n        controller: function ($scope, $element) {\n            $scope.field = $element.attr(\"field-name\");\n            $scope.class = \"\";\n            if ($element[0].hasAttribute(\"add-class\")) {\n                $scope.class = $element.attr(\"add-class\");\n            }\n            $scope.description = \"\";\n            if ($element[0].hasAttribute(\"description\")) {\n                $scope.description = $element.attr(\"description\");\n            }\n            $scope.fieldType = \"text\";\n            if ($element[0].hasAttribute(\"field-type\")) {\n                $scope.fieldType = $element.attr(\"field-type\");\n            }\n        }\n    };\n});"],"sourceRoot":"/source/"}