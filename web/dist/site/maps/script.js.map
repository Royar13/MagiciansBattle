{"version":3,"sources":["app.js","services/userService.js","controllers/home/homeCtrl.js","controllers/chat/chatCtrl.js","controllers/loginBar/loginBarCtrl.js","controllers/lobby/lobbyCtrl.js","controllers/login/loginCtrl.js","controllers/main/main.js","controllers/register/registerCtrl.js","directives/field/errors.js","directives/field/generalErrors.js","directives/field/selectField.js","directives/field/textField.js"],"names":[],"mappingsnFA;AACA;AACA;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChCA;AACA;AACA;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"script.js","sourcesContent":["$(document).ready(function () {\r\n    $(document).foundation();\r\n});\r\n\r\nï»¿var app = angular.module(\"magiciansBattle\", [\"ngRoute\", \"angularCSS\"]);\r\n\r\napp.run(function ($rootScope) {\r\n    $rootScope.apiUrl = apiUrl;\r\n    $rootScope.templateUrl = templateUrl;\r\n    $rootScope.styleUrl = styleUrl;\r\n\r\n    //$rootScope.$on(\"$routeChangeSuccess\", function (ev, data) {\r\n    //    if (data.$route && data.$route.controller)\r\n    //        $rootScope.controller = data.$route.controller;\r\n    //});\r\n});\r\n\r\napp.config(function ($routeProvider) {\r\n    $routeProvider\r\n            .when(\"/\", {\r\n                templateUrl: templateUrl(\"controllers/home/home.html\"),\r\n                controller: \"homeCtrl\",\r\n                css: styleUrl(\"home.css\")\r\n            })\r\n            .when(\"/lobby\", {\r\n                templateUrl: templateUrl(\"controllers/lobby/lobby.html\"),\r\n                controller: \"lobbyCtrl\",\r\n                css: styleUrl(\"lobby.css\")\r\n            })\r\n            .when(\"/chat\", {\r\n                templateUrl: templateUrl(\"controllers/chat/chat.html\"),\r\n                controller: \"chatCtrl\",\r\n                css: styleUrl(\"chat.css\")\r\n            });\r\n});\r\n\r\nfunction apiUrl(relativeUrl) {\r\n    return \"/MagiciansBattle/web/app_dev.php/api/\" + relativeUrl;\r\n}\r\nfunction templateUrl(relativeUrl) {\r\n    return \"/MagiciansBattle/web/site/app/\" + relativeUrl;\r\n}\r\nfunction styleUrl(relativeUrl) {\r\n    return \"/MagiciansBattle/web/dist/site/styles/\" + relativeUrl;\r\n}","angular.module(\"magiciansBattle\").factory(\"userService\", function ($http, $location, $q, $rootScope) {\r\n    var self = {\r\n        login: login,\r\n        logout: logout,\r\n        fetchUser: fetchUser,\r\n        getUser: getUser,\r\n        setUser: setUser\r\n    };\r\n\r\n    var user = null;\r\n    var userRequest = null;\r\n\r\n    function login(fields) {\r\n        var deferred = $q.defer();\r\n        $http({\r\n            method: \"post\",\r\n            url: $rootScope.apiUrl(\"account/login\"),\r\n            data: fields\r\n        }).then(function (response) {\r\n            if (response.data.success) {\r\n                fetchUser().then(function () {\r\n                    deferred.resolve();\r\n                });\r\n            }\r\n            else {\r\n                deferred.reject(response.data.errors);\r\n            }\r\n        }, function () {\r\n            deferred.reject();\r\n        });\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    function logout() {\r\n        $http({\r\n            method: \"post\",\r\n            url: $rootScope.apiUrl(\"account/logout\")\r\n        }).then(function () {\r\n            user = null;\r\n            userRequest = null;\r\n        });\r\n    }\r\n\r\n    function fetchUser() {\r\n        var deferred = $q.defer();\r\n\r\n        if (user != null) {\r\n            deferred.resolve(user);\r\n        }\r\n        else {\r\n            if (userRequest == null) {\r\n                userRequest = $http({\r\n                    method: \"post\",\r\n                    url: $rootScope.apiUrl(\"account/fetchUser\")\r\n                });\r\n            }\r\n            userRequest.then(function (response) {\r\n                if (response.data.success) {\r\n                    user = response.data.user;\r\n                    deferred.resolve(user);\r\n                }\r\n                else {\r\n                    deferred.reject();\r\n                }\r\n            }, function () {\r\n                deferred.reject();\r\n            }).finally(function () {\r\n                userRequest = null;\r\n            });\r\n        }\r\n        return deferred.promise;\r\n    }\r\n\r\n    function getUser() {\r\n        return user;\r\n    }\r\n\r\n    function setUser(value) {\r\n        user = value;\r\n    }\r\n\r\n    return self;\r\n});","angular.module(\"magiciansBattle\").controller(\"homeCtrl\", function ($scope) {\r\n\r\n});","angular.module(\"magiciansBattle\").controller(\"chatCtrl\", function ($scope) {\r\n});\r\n\r\nvar websocket = WS.connect(\"ws://127.0.0.1:8080\");\r\n\r\nwebsocket.on(\"socket/connect\", function(session){\r\n    //the callback function in \"subscribe\" is called everytime an event is published in that channel.\r\n    session.subscribe(\"chat/channel\", function(uri, payload){\r\n        console.log(\"Received message\", payload.msg);\r\n    });\r\n\r\n    session.publish(\"chat/channel\", \"This is a message!\");\r\n});","angular.module(\"magiciansBattle\").controller(\"loginBarCtrl\", function ($scope, $rootScope, $route, userService) {\r\n    var fetchFinished = false;\r\n    $scope.loggedIn = function () {\r\n        if (!fetchFinished)\r\n            return null;\r\n        return $scope.getUser() !== null;\r\n    };\r\n    userService.fetchUser().finally(function () {\r\n        fetchFinished = true;\r\n    });\r\n\r\n    $scope.getUser = userService.getUser;\r\n\r\n    $scope.toggleTooltip = function () {\r\n        if ($(\"#user-panel .userMenu\").is(\":visible\")) {\r\n            $(\"#user-panel .userMenu\").hide();\r\n            $(document).off(\".hideUserMenu\");\r\n        }\r\n        else {\r\n            $(\"#user-panel .userMenu\").show();\r\n            $(document).on(\"click.hideUserMenu\", function (event) {\r\n                if (!$(event.target).closest(\"#user-panel\").length) {\r\n                    $scope.toggleTooltip();\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    $scope.logout = function () {\r\n        userService.logout();\r\n        location.reload();\r\n    };\r\n});","angular.module(\"magiciansBattle\").controller(\"lobbyCtrl\", function ($scope) {\r\n\r\n});","angular.module(\"magiciansBattle\").controller(\"loginCtrl\", function ($scope, userService) {\r\n    $scope.loading = false;\r\n    $scope.fields = {};\r\n    $scope.errors = {};\r\n\r\n    $scope.login = function () {\r\n        $scope.loading = true;\r\n        userService.login($scope.fields).then(function () {\r\n            $(\"#login-modal\").foundation(\"close\");\r\n        }, function () {\r\n            $scope.errors.generalErrors = [\"Wrong email or password\"];\r\n        }).finally(function () {\r\n            $scope.loading = false;\r\n        });\r\n    };\r\n\r\n});","angular.module(\"magiciansBattle\").controller(\"mainCtrl\", function ($scope) {\r\n\r\n});","angular.module(\"magiciansBattle\").controller(\"registerCtrl\", function ($scope, $rootScope, $http, userService) {\r\n    $scope.loading = false;\r\n    $scope.fields = {};\r\n    $scope.errors = {};\r\n    $scope.accountCreated = false;\r\n\r\n    $scope.register = function () {\r\n        $scope.loading = true;\r\n        $http({\r\n            method: \"post\",\r\n            url: $rootScope.apiUrl(\"account/register\"),\r\n            data: $scope.fields\r\n        }).then(function (response) {\r\n            $scope.loading = false;\r\n            if (response.data.success) {\r\n                $scope.accountCreated = true;\r\n                userService.login($scope.fields);\r\n            }\r\n            else {\r\n                $scope.errors = response.data.errors;\r\n            }\r\n        });\r\n    };\r\n});","angular.module(\"magiciansBattle\").directive(\"errors\", function ($rootScope) {\n    return {\n        restrict: \"A\",\n        scope: true,\n        templateUrl: $rootScope.templateUrl(\"directives/field/errors.html\")\n    };\n});","angular.module(\"magiciansBattle\").directive(\"generalErrors\", function ($rootScope) {\n    return {\n        restrict: \"A\",\n        scope: true,\n        templateUrl: $rootScope.templateUrl(\"directives/field/generalErrors.html\")\n    };\n});","angular.module(\"magiciansBattle\").directive(\"selectField\", function ($rootScope) {\n    return {\n        restrict: \"A\",\n        scope: true,\n        require: \"field\",\n        replace: true,\n        templateUrl: $rootScope.templateUrl(\"directives/field/selectField.html\"),\n        controller: function ($scope, $element) {\n            $scope.field = $element.attr(\"field-name\");\n\n            $scope.class = \"\";\n            if ($element[0].hasAttribute(\"add-class\")) {\n                $scope.class = $element.attr(\"add-class\");\n            }\n            $scope.description = \"\";\n            if ($element[0].hasAttribute(\"field-description\")) {\n                $scope.description = $element.attr(\"field-description\");\n            }\n            $scope.selectName = $element.attr(\"options\");\n            var valueName = null;\n            if ($element[0].hasAttribute(\"options-value\")) {\n                valueName = $element.attr(\"options-value\");\n            }\n            var textName = null;\n            if ($element[0].hasAttribute(\"options-text\")) {\n                textName = $element.attr(\"options-text\");\n            }\n\n            $scope.getOptionValue = function (option) {\n                if (valueName == null)\n                    return option;\n                else\n                    return option[valueName];\n            };\n            $scope.getOptionText = function (option) {\n                if (textName == null)\n                    return option;\n                else\n                    return option[textName];\n            };\n        }\n    };\n});","angular.module(\"magiciansBattle\").directive(\"textField\", function ($rootScope) {\n    return {\n        restrict: \"A\",\n        scope: true,\n        templateUrl: $rootScope.templateUrl(\"directives/field/textField.html\"),\n        replace: true,\n        controller: function ($scope, $element) {\n            $scope.field = $element.attr(\"field-name\");\n            $scope.class = \"\";\n            if ($element[0].hasAttribute(\"add-class\")) {\n                $scope.class = $element.attr(\"add-class\");\n            }\n            $scope.description = \"\";\n            if ($element[0].hasAttribute(\"field-description\")) {\n                $scope.description = $element.attr(\"field-description\");\n            }\n            $scope.fieldType = \"text\";\n            if ($element[0].hasAttribute(\"field-type\")) {\n                $scope.fieldType = $element.attr(\"field-type\");\n            }\n        }\n    };\n});"],"sourceRoot":"/source/"}